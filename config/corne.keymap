// vim: filetype=c
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* use helper macros to define left and right hand keys */
#include "../zmk-nodefree-config/helper.h"

// The keyboard has 36 keys but the shields assume 42 
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define DEFAULT 0
#define NUM_BASE 1
#define NUM 2
#define NUMLOCK 3
#define SYM_BASE 4
#define SYM 5
#define SYMLOCK 6
#define NAV 7
#define FUN 8
#define MEDIA 9

#define PRINT LS(LG(N4))
#define LOCK LC(LG(Q))

#define xxx &none  
#define ___ &trans 

// homerow mods
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

ZMK_CONDITIONAL_LAYER(NUM, NUM_BASE)
ZMK_CONDITIONAL_LAYER(NUMLOCK, NUM_BASE)
ZMK_CONDITIONAL_LAYER(SYM, SYM_BASE)
ZMK_CONDITIONAL_LAYER(SYMLOCK, SYM_BASE)

// 0
ZMK_LAYER(base,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P           xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     &hml LCTL A   &hml LALT S   &hml LGUI D   &hml LSHFT F  &kp G             &kp H         &hmr RSHFT J  &hmr LGUI K   &hmr LALT L   &hmr RCTL SEMI  xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH        xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      &mo MEDIA     &lt NAV TAB   &lt NUM SPACE     &lt SYM RET   &kp BSPC      &mo FUN
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 1
ZMK_LAYER(num_base,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     xxx           xxx           xxx           xxx           xxx               &kp SLASH     &kp N7        &kp N8        &kp N9        &kp MINUS       xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     xxx           xxx           xxx           xxx           xxx               &kp ASTRK     &kp N4        &kp N5        &kp N6        &kp PLUS        xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  ---     xxx           xxx           xxx           xxx           xxx               &kp DOT       &kp N1        &kp N2        &kp N3        &kp N0          xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      xxx           xxx           xxx               ___           ___           ___   
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 2
ZMK_LAYER(num,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      ___           ___           ___               ___           ___           &tog NUMLOCK
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 3
ZMK_LAYER(num_lock,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      ___           ___           ___               ___           ___           ___   
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 4
ZMK_LAYER(sym_base,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR        xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     &kp GRAVE     &kp TILDE     xxx           &kp LSHFT     xxx               xxx           &kp MINUS     &kp EQUAL     &kp LBRC      &kp RBRC        xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     xxx           xxx           xxx           xxx           xxx               xxx           &kp PIPE      &kp DQT       &kp SQT       &kp BSLH        xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      xxx           &kp BSPC      &kp ESC           ___           ___           ___   
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 5
ZMK_LAYER(sym,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx          
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      &tog SYMLOCK  ___           ___               ___           ___           xxx  
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 6
ZMK_LAYER(sym_lock,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     ___           ___           ___           ___           ___               ___           ___           ___           ___           ___             xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      ___           ___           ___               ___           ___           ___   
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 7
ZMK_LAYER(nav,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0          xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     &kp LCTL      &kp LALT      &kp LGUI      &kp LSHFT     xxx               xxx           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT       xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     xxx           xxx           xxx           xxx           xxx               xxx           &kp HOME      &kp PG_DN     &kp PG_UP     &kp END         xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      xxx           xxx           xxx               ___           &kp LA(BSPC)  xxx  
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 8
ZMK_LAYER(fun,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     &kp F1        &kp F2        &kp F3        &kp F4        xxx               xxx           xxx           xxx           xxx           xxx             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     &kp F5        &kp F6        &kp F7        &kp F8        xxx               xxx           xxx           xxx           xxx           xxx             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     &kp F9        &kp F10       &kp F11       &kp F12       &kp PRINT         xxx           xxx           xxx           xxx           xxx             xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      xxx           xxx           xxx               xxx           xxx           xxx  
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)

// 9
ZMK_LAYER(media,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  xxx     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  xxx           xxx               xxx           xxx           xxx           xxx           &kp LOCK        xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     xxx           xxx           xxx           xxx           xxx               xxx           &kp C_PP      &kp C_PREV    &kp C_NEXT    xxx             xxx
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  xxx     &bt BT_CLR    xxx           xxx           xxx           xxx               xxx           &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  xxx             xxx
     // ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                      xxx           xxx           xxx               xxx           xxx           xxx  
     //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
)
