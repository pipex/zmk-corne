// vim: filetype=c
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define NAV 3
#define FUN 4
#define MEDIA 5

#define PRINT LS(LG(N4))
#define LOCK LC(LG(Q))


/ {
      behaviors {
        hml: homerow_mods_left_hand {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <75>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 10>;
        };
        hmr:  homerow_mods_right_hand {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <75>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4>;
        };
      };


      keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Base";
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T    |   |  Y  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G    |   |  H  |  J   |  K  |  L  |  ;  |      |
// |      |  Z  |  X  |  C  |  V  |  B    |   |  N  |  M   |  ,  |  .  |  /  |      |
//                    | ESC | TAB | SPACE |   | RET | BKSP | RET |
                        bindings = <
   &none  &kp Q        &kp W       &kp E       &kp R       &kp T     &kp Y &kp U       &kp I       &kp O       &kp P           &none
   &none  &hml LSHFT A &hml LCTL S &hml LALT D &hml LGUI F &kp G     &kp H &hmr LGUI J &hmr LALT K &hmr RCTL L &hmr RSHFT SEMI &none
   &none  &kp Z        &kp X       &kp C       &kp V       &kp B     &kp N &kp M       &kp COMMA   &kp DOT     &kp FSLH        &none
                             &mo MEDIA &lt NAV TAB &lt NUM SPACE     &lt SYM RET &kp BSPC &mo FUN
                        >;
                };
                number_layer {
                        label = "Num";
// ,-----------------------------------------------------------------------------------.
// |      |      |      |      |      |     |   |  /  |   7  |   8  |   9  |   -  |      |
// |      |      |      |      |      |     |   |  *  |   4  |   5  |   6  |   +  |      |
// |      |      |      |      |      |     |   |     |   1  |   2  |   3  | BKSP |      |
//                      |      |      |     |   | RET |   0  |   .  |
                        bindings = <
   &none &none &none &none &none &none    &kp SLASH &kp N7 &kp N8 &kp N9 &kp MINUS &none
   &none &none &none &none &none &none    &kp ASTRK &kp N4 &kp N5 &kp N6 &kp PLUS  &none
   &none &none &none &none &none &none    &none     &kp N1 &kp N2 &kp N3 &kp BSPC  &none
                     &none &none &none    &trans    &kp N0 &kp DOT

                        >;
                };

                symbol_layer {
                        label = "Sym";
// -------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |  `  |  ~  |     |     |     |   |     |  -  |  =  |  [  |  ]  |      |
// |      |     |     |     |     |     |   |     |  |  |  "  |  '  |  \  |      |
//                    |     | TAB | ESC |   | RET | BKSP| RET |
                        bindings = <
   &none &kp EXCL         &kp AT    &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &none
   &none &hml LSHFT GRAVE &kp TILDE &none    &none    &none        &none     &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &none
   &none &none            &none     &none    &none    &none        &none     &kp PIPE  &kp DQT   &kp SQT  &kp BSLH &none
                                         &none &kp BSPC &kp ESC    &trans &trans &trans
                        >;
                };

                nav_layer {
                        label = "Nav";
// -------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      |  `  |     |     |     |     |   |     |Left |Down |  Up | Rght|      |
// |      |     |     |     |     |     |   |     |Home |PgDn | PgUp| End |      |
//                    | ESC | TAB | SPC |   | RET | BKSP| RET |
                        bindings = <
   &none &kp N1    &kp N2    &kp N3   &kp N4   &kp N5      &kp N6 &kp N7    &kp N8    &kp N9    &kp N0    &none
   &none &kp LSHFT &kp LCTL  &kp LALT &kp LGUI &none       &none  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &none
   &none &none     &none     &none    &none    &none       &none  &kp HOME  &kp PG_DN &kp PG_UP &kp END   &none
                                    &none &none &none      &trans &kp LA(BSPC) &trans
                        >;
                };

                fun_layer {
                        label = "Fun";
// -------------------------------------------------------------------------------
// |      |  F1 |  F2 |  F3 |  F4 |     |   |     |     |     |     |     |      |
// |      |  F5 |  F6 |  F7 |  F8 |     |   |     |     |     |     |     |      |
// |      |  F9 | F10 | F11 | F12 |Print|   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &kp F1 &kp F2  &kp F3  &kp F4  &none          &none &none &none &none &none &none
   &none &kp F5 &kp F6  &kp F7  &kp F8  &none          &none &none &none &none &none &none
   &none &kp F9 &kp F10 &kp F11 &kp F12 &kp PRINT      &none &none &none &none &none &none
                                &none &none &none      &none &none &none
                        >;
                };

                media_layer {
                        label = "Media";
// -------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     | Lock|      |
// |      |     |     |     |     |     |   |     | >=  | <<  | >>  |     |      |
// |      |     |     |     |     |     |   |     | Mute| V+  | V-  |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &none &none &none &none &none      &none &none      &none        &none        &kp LOCK &none
   &none &none &none &none &none &none      &none &kp C_PP   &kp C_PREV   &kp C_NEXT   &none    &none
   &none &none &none &none &none &none      &none &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &none    &none
                     &none &none &none      &none &none &none
                        >;
                };


        };
};
